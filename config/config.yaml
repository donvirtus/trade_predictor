###############################################################################
# Configuration file for crypto trading prediction system
# Updated: 2025-09-29 with enhanced adaptive thresholds
# Author: Adaptive threshold auto-calculation system  
###############################################################################

# Data and Binance API configuration
data:
  symbol: BTCUSDT
  market_type: future  # 'spot' or 'future'

binance:
  base_url: "https://api.binance.com"
  
pairs:
  - BTCUSDT
  - ETHUSDT
  - DOGEUSDT

timeframes:
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 4h
  - 6h  

months: 26  # jumlah bulan historis yang diambil

# Rebuild & retention flags
# Default without flags: treat as force_full_rebuild = true, retain_full_history = false
force_full_rebuild: true
retain_full_history: false

fetch:
  # Opsi historis panjang (opsional). Jika 'years' atau 'start' diisi maka override 'months'.
  years: null          # jumlah tahun historis (18 bulan terakhir)
  start: null         # ISO8601 (misal: 2022-01-01T00:00:00Z) jika ingin titik awal spesifik
  end: null           # ISO8601 (default: now, otomatis di-trim ke last closed candle)
  limit: 1000         # limit per request (sesuaikan jika ingin 1500 bila didukung)
  tail_latest_iters: 4   # berapa kali tarik ulang batch terbaru tanpa since
  overlap_factor: 50      # banyak candle (kelipatan timeframe) untuk refetch overlap akhir
  gap_tolerance_factor: 1.5  # faktor toleransi gap (1.5 * timeframe)
  incremental: true      # ENABLED untuk continuous updates; overridden to False when force_full_rebuild=true

# Indicator params
bb_periods: [24, 72]
bb_devs: [1.0, 2.0]

# Moving Average Configuration - Set to empty array [] to disable MA features entirely
ma_periods: [4]  # Available options: [4, 6, 12, 24, 48] or [] to disable
enable_ma_features: true     # Set to false to completely disable all MA-related features

ma_bb_cross:
  enabled: true
  distance_mode: both        # ratio | delta | both (gunakan both untuk lengkap)
  lookbacks: [1, 3, 5, 8]    # rolling window to mark recent crossing events
  since_cross_limit: 12      # maksimum candle dihitung sejak crossing terakhir (clip)
  include_middle: true       # sertakan analisis crossing ke middle band
  include_percent_b: true    # sertakan fitur percent_b saat crossing
  slope_window: 5            # window default untuk perhitungan slope MA terhadap BB
  slope_threshold: 0.1       # ✅ UPDATED: percentage-based threshold (0.1% = 0.001 in old system)
  enable_sequential_logic: true  # ✅ NEW: enable sequential crossing detection
  enable_target_prediction: true # ✅ NEW: enable probabilistic target prediction

bb_slope:
  enabled: true
  window: 5                  # panjang window untuk perhitungan slope band
  normalize: true            # normalisasi slope ke dalam persen perubahan
  threshold: 0.1             # ✅ UPDATED: percentage-based threshold (0.1%)
  expansion_threshold: 0.2   # ✅ UPDATED: percentage-based expansion threshold (0.2%)
  enable_linear_regression: true  # ✅ NEW: enable linear regression slope for smoother trends

macd_params: [12, 26, 9]

adx_period: 14
volatility_period: 5
price_range_period: 5
lagged_periods: [2]

target:
  horizon: 20
  
  # ✅ THRESHOLD MODE SELECTION
  threshold_mode: "auto_balanced"  # "manual" | "auto_balanced" | "adaptive"
  
  # Manual fixed threshold (used when threshold_mode = "manual")
  sideways_threshold_pct: 0.15     # ✅ OPTIMIZED: Auto-selected optimal threshold
  
  # Auto-balanced thresholds (used when threshold_mode = "auto_balanced")
  auto_balanced_config: "data/auto_balanced_thresholds.json"
  
  # Auto-balancing parameters
  auto_balance:
    target_distribution:
      UP: 33.0        # Target 33% UP signals
      SIDEWAYS: 34.0  # Target 34% SIDEWAYS (slightly higher for stability)
      DOWN: 33.0      # Target 33% DOWN signals
    tolerance: 3.0    # ±3% tolerance for "good enough"
    fallback_threshold: 0.15  # ✅ OPTIMIZED: Use auto-selected optimal threshold
  
  # ✅ NEW: Adaptive thresholds untuk multi-timeframe consistency
  adaptive_thresholds:
    enabled: true                   # ✅ ENABLED - Using optimal thresholds
    method: "manual"            # "manual" | "auto_volatility" | "hybrid"
    auto_update: true           # Update multipliers berdasarkan data terbaru
    update_frequency_days: 7    # Update setiap 7 hari
    lookback_days: 30          # Data history untuk calculate volatility
    base_timeframe: "1h"       # Reference timeframe (1.0x multiplier)
    
    # Manual multipliers (based on actual movement analysis)
    manual_multipliers:
      "5m": 0.15             # 0.15% untuk 5m (very conservative for noise)
      "15m": 0.30            # 0.30% untuk 15m (around 80th percentile)
      "30m": 0.40            # 0.40% untuk 30m
      "1h": 0.50             # 0.50% untuk 1h (around 90th percentile)
      "2h": 0.65             # 0.65% untuk 2h
      "4h": 0.80             # 0.80% untuk 4h
      "6h": 1.00             # 1.00% untuk 6h (around 90th percentile 5h)
    
    # Auto-calculation parameters
    volatility_calc:
      method: "rolling_std"           # rolling_std, atr, parkinson
      window: 20                      # Rolling window size
      annualize: true                 # Whether to annualize volatility
      smoothing_factor: 0.7           # EMA smoothing (0.7 = 70% old, 30% new)
      min_multiplier: 0.3             # Minimum multiplier (more conservative)
      max_multiplier: 1.8             # Maximum multiplier (more conservative)
      balance_factor: 0.7             # Balance: 0=pure volatility, 1=pure timeframe scaling
      hybrid_weight: 0.2              # For hybrid method: weight of auto-calculation (0.2 = 20% auto, 80% manual)

# Multi-horizon & extremes pengaturan baru
multi_horizon:
  horizons: [1, 5, 10, 20]          # daftar horizon yang akan diberi label direction_h{H}
  enable_extremes: true         # jika true menghitung future_max_high_h{base}, future_min_low_h{base}
  include_time_to: false        # jika ingin menambah time_to_max_high_h{H}, time_to_min_low_h{H}
  rr_min: 1.2                   # minimal reward:risk ratio untuk filtering (akan dipakai di predictor nanti)
  thresholds:
    sideways_pct: 1.0           # override sideways_threshold_pct spesifik multi horizon (opsional)
    take_profit_pct: 2.0        # contoh: akan dipakai perhitungan R/R (placeholder)
    stop_loss_pct: 1.0          # contoh: placeholder

external:
  enable_coingecko: false
  coin_id: bitcoin
  enable_coinmetrics: false
  coinmetrics_asset: btc
  coinmetrics_metrics: [AdrActCnt]
  enable_dune: false
  dune_query_ids: []

output:
  sqlite_db: data/db/preprocessed.sqlite

# Real-time prediction settings
realtime:
  update_interval: 300  # seconds between predictions (5 minutes)
  confidence_threshold: 0.7  # minimum confidence for alerts
  price_change_threshold: 2.0  # % price change for alerts
  max_predictions_memory: 100  # keep last N predictions in memory
  
  # Monitoring settings
  monitor_interval: 30  # seconds between monitor updates
  accuracy_evaluation_delay: 30  # minutes to wait before evaluating predictions
  
  # Alerting
  enable_alerts: true
  alert_high_confidence: 0.85  # alert for high confidence predictions
  alert_methods:
    - console  # terminal output
    # - email    # email alerts (future)
    # - webhook  # webhook notifications (future)
  logs_dir: data/logs
  plots_dir: data/plots

# Prediction data fetching settings
prediction:
  # Real-time data fetching (set to false to use database-only mode like before)
  enable_realtime_fetch: true
  
  # Data lookback window for feature calculation
  lookback_days: 5        # days of historical data to fetch (alternative to lookback_candles)
  lookback_candles: null   # specific number of candles (overrides lookback_days if set)
  
  # Binance API settings for prediction
  api_limit: 1000         # candles per API request
  gap_tolerance: 1.5      # gap tolerance factor for data validation
  
  # Feature calculation settings (inherit from main config if null)
  use_training_config: true  # if true, use same feature settings as training
  
  # Fallback to database if API fails
  fallback_to_database: false
  database_fallback_rows: 300  # number of rows to load from database as fallback

db_mode: replace
limit_rows: null
smote_threshold: 0.1

# ✅ Machine Learning Models Configuration
lightgbm:
  default:
    objective: multiclass
    num_class: 3  # UP, SIDEWAYS, DOWN
    metric: multi_logloss
    boosting_type: gbdt
    num_leaves: 31
    learning_rate: 0.05
    feature_fraction: 0.8     # Feature regularization untuk prevent overfitting
    bagging_fraction: 0.8     # Sample regularization
    bagging_freq: 5
    lambda_l1: 0.1           # L1 regularization
    lambda_l2: 0.1           # L2 regularization 
    min_data_in_leaf: 20     # Prevent overfitting
    num_boost_round: 1000
    early_stopping_rounds: 100
    verbose: -1
    random_state: 42
  optimization:
    cv_folds: 5
    trials: 20
  tuning:
    num_leaves: [15, 63]
    learning_rate: [0.01, 0.1]
    feature_fraction: [0.7, 0.9]
    bagging_fraction: [0.7, 0.9]
    lambda_l1: [0.01, 0.5]
    lambda_l2: [0.01, 0.5]
    min_data_in_leaf: [10, 50]

xgboost:
  default:
    objective: multi:softprob
    num_class: 3
    eval_metric: mlogloss
    booster: gbtree
    max_depth: 6
    learning_rate: 0.05
    subsample: 0.8           # Sample regularization
    colsample_bytree: 0.8    # Feature regularization
    reg_alpha: 0.1           # L1 regularization
    reg_lambda: 0.1          # L2 regularization
    min_child_weight: 5      # Prevent overfitting
    n_estimators: 1000
    early_stopping_rounds: 100
    random_state: 42
    verbosity: 0
  optimization:
    cv_folds: 5 
    trials: 20
  tuning:
    max_depth: [3, 10]
    learning_rate: [0.01, 0.1]
    subsample: [0.7, 0.9]
    colsample_bytree: [0.7, 0.9]
    reg_alpha: [0.01, 0.5]
    reg_lambda: [0.01, 0.5]
    min_child_weight: [1, 10]

catboost:
  default:
    iterations: 500
    depth: 6
    learning_rate: 0.05      # ✅ Slightly higher for faster convergence
    l2_leaf_reg: 3
    border_count: 128
    early_stopping_rounds: 50
    loss_function: MultiClass # ✅ Explicit multi-class
    eval_metric: MultiClass
    class_weights: null       # Will be handled by sample_weight in training
    random_seed: 42          # ✅ Reproducibility
    verbose: False           # ✅ Quiet training
    bootstrap_type: Bayesian # ✅ Better for time series
    bagging_temperature: 0.5 # ✅ Regularization
  optimization:
    cv_folds: 5
    trials: 20
  tuning:
    iterations: [500, 2000]
    depth: [4, 10]
    learning_rate: [0.005, 0.1]
    l2_leaf_reg: [1, 10]
    border_count: [32, 255]
    bagging_temperature: [0.0, 1.0]

###############################################################################
# End of file
###############################################################################

